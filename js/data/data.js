export default {
  skills: [
    `HTML5`,
    `Семантичная и валидная верстка`,
    `Адаптивная графика(ретинизация и кадрирование изображений)`,
    `CSS`,
    `Кроссбраузерная и pixel-perfect верстка`,
    `Построение адаптивных сеток`,
    `Анимация`,
    `JS`,
    `Проектирование приложений`,
    `MVP`,
    `ES6+`,
    `Gulp`,
    `Git`,
    `AJAX`,
    `Promise`,
    `LESS`,
    `SASS`,
    `БЭМ методология`,
    `Mobile first`,
    `Progressive enhancement`,
    `Соблюдение принципа DRY`,
    `Написание оптимизированного кода`
  ],

  education: [
    {
      name: `basicHTML&CSS`,
      type: `Интенсив`,
      title: `Базовый HTML и CSS`,
      data: `16 января - 22 февраля 2017г.`,
      state: `100%`
    },
    {
      name: `advancedHTML&CSS`,
      type: `Интенсив`,
      title: `“Продвинутый HTML и CSS”`,
      data: `22 мая - 28 июня 2017г.`,
      state: `100%`
    },
    {
      name: `basicJS`,
      type: `Интенсив`,
      title: `Базовый JavaScript`,
      data: `8 августа - 20 сентября 2017г.`,
      state: `100%`
    },
    {
      name: `advancedJS`,
      type: `Интенсив`,
      title: `Продвинутый JavaScript`,
      data: `26 сентября - 8 ноября 2017г.`,
      state: `100%`
    }
  ],

  portfolio: [
    {
      title: `Gllacy`,
      link: `https://kvezal.github.io/gllacy/`,
      features: [
        `Markup`,
        `Fixed`,
        `Progressive`,
        `Pixel-Perfect`,
        `ES5`,
        `Базовая оптимизация`,
        `Валидный код`
      ],
      shortDescription: `интернет-магазин мороженого.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовался подход "Progressive Enhancement". Использовано немного нативного JS для реализации всплывающего окна и подключения Яндекс карты с помощью API (при выключеном JS, кнопка вызывающая появление модального окна, будет осуществлять переход на отдельную страницу, а роль карты исполняет фоновое изображение блока с картой). Произведена базовая оптимизация проекта(использованы спрайты для растровых иконок и минифицирован CSS и JS). Выполнена резиновая верстка в диападоне от 900 до 1200px.`
    },
    {
      title: `Nerds`,
      link: `https://kvezal.github.io/nerds/`,
      features: [
        `Markup`,
        `Fixed`,
        `Progressive`,
        `Pixel-Perfect`,
        `ES5`,
        `Базовая оптимизация`,
        `Валидный код`
      ],
      shortDescription: `сайт web-студии.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовался подход "Progressive Enhancement". Использовано немного нативного JS для реализации всплывающего окна и подключения Яндекс карты с помощью API. Произведена базовая оптимизация проекта(использованы спрайты для растровых иконок и минифицирован CSS и JS).`
    },
    {
      title: `Technomart`,
      link: `https://kvezal.github.io/technomart/`,
      features: [
        `Markup`,
        `Fixed`,
        `Progressive`,
        `Pixel-Perfect`,
        `ES5`,
        `Базовая оптимизация`,
        `Валидный код`
      ],
      shortDescription: `интернет-магазин строительных материалов и инструментов для ремонта.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовался подход "Progressive Enhancement". Использовано немного нативного JS для реализации всплывающего окна и подключения Яндекс карты с помощью API. Произведена базовая оптимизация проекта(использованы спрайты для растровых иконок и минифицирован CSS и JS).`
    },
    {
      title: `Sedona`,
      link: `https://kvezal.github.io/sedona/`,
      features: [
        `Markup`,
        `Fixed`,
        `Progressive`,
        `Pixel-Perfect`,
        `ES5`,
        `Базовая оптимизация`,
        `Валидный код`
      ],
      shortDescription: `информационный сайт для туристов.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовался подход "Progressive Enhancement". Использовано немного нативного JS для реализации всплывающего окна и подключения Google карты с помощью API. Произведена базовая оптимизация проекта(использованы спрайты для растровых иконок и минифицирован CSS и JS). Выполнена резиновая верстка в диападоне от 768 до 1200px.`
    },
    {
      title: `Device`,
      link: `https://kvezal.github.io/device/`,
      features: [
        `Markup`,
        `Fixed`,
        `LESS`,
        `Gulp`,
        `Progressive`,
        `Pixel-Perfect`,
        `ES5`,
        `Базовая оптимизация`,
        `Валидный код`
      ],
      shortDescription: `интернет-магазин гаджетов.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовался подход "Progressive Enhancement". Использовано немного нативного JS для реализации всплывающего окна и подключения Яндекс карты с помощью API (при выключеном JS, кнопка вызывающая появление модального окна, будет осуществлять переход на отдельную страницу, а роль карты исполняет фоновое изображение блока с картой). Произведена базовая оптимизация проекта(использованы спрайты для растровых иконок и минифицирован CSS и JS). Первая попытка работы с CSS-препроцессором и сборщиком проектов(в данном случае использовались препроцессор LESS и сборщик Gulp).`
    },
    {
      title: `Mishka`,
      link: `https://kvezal.github.io/mishka/`,
      features: [
        `Markup`,
        `Adaptive`,
        `Retina`,
        `Кадрирование изображений`,
        `SASS`,
        `SVG`,
        `Gulp`,
        `БЭМ`,
        `Mobile First`,
        `Graceful Degradation`,
        `Pixel-Perfect`,
        `ES5`,
        `Оптимизация`,
        `Валидный код`
      ],
      shortDescription: `интернет-магазин вязаных игрушек.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовались подход "Graceful Degradation" и "Mobile First", также использовалась БЭМ-методология. Использовано немного нативного JS для реализации всплывающего окна, меню (в мобильной версии сайта) и подключения Яндекс карты с помощью API (при выключеном JS в качестве карты выступает фоновое изображение блока к которому подключается карта). Сделана раскадровка и ретинизация изображений с целью ускорения загрузки страницы, чтобы качество изображений было одинакого высоким как на ретиновых, так и на обычных экранах. Произведена сборка и базовая оптимизация проекта с помощью Gulp (оптимизация графики, SVG-спрайты, сборка CSS из SASS, минификация JS и собранного CSS, автоприфексование свойств и группировка media-выражений).`
    },
    {
      title: `Pink`,
      link: `https://kvezal.github.io/pink/`,
      features: [
        `Markup`,
        `Adaptive`,
        `Retina`,
        `Кадрирование изображений`,
        `SASS`,
        `SVG`,
        `Gulp`,
        `БЭМ`,
        `Mobile First`,
        `Progressive Enhancement`,
        `Pixel-Perfect`,
        `ES5`,
        `Оптимизация`,
        `Валидный код`
      ],
      shortDescription: `промо-сайт приложения.`,
      fullDescription: `Верстка проекта реализована в соответствии с PSD-макетом, соблюден "Pixel-Perfect". В процессе разработки использовались подход "Progressive Enhancement" и "Mobile First", также использовалась БЭМ-методология. Использовано немного нативного JS для реализации всплывающего окна, меню (в мобильной версии сайта) и подключения Яндекс карты с помощью API (при выключеном JS в качестве карты выступает фоновое изображение блока к которому подключается карта). Сделана раскадровка и ретинизация изображений с целью ускорения загрузки страницы, чтобы качество изображений было одинакого высоким как на ретиновых, так и на обычных экранах. Произведена базовая сборка и оптимизация проекта с помощью Gulp (оптимизация графики, SVG-спрайты, сборка CSS из SASS, минификация JS и собранного CSS, автоприфексование свойств и группировка media-выражений).`
    },
    {
      title: `Portfolio`,
      link: `https://kvezal.github.io/portfolio/`,
      features: [
        `Дизайн`,
        `Markup`,
        `Adaptive`,
        `Retina`,
        `Кадрирование изображений`,
        `SASS`,
        `SVG`,
        `Gulp`,
        `БЭМ`,
        `Mobile First`,
        `Progressive Enhancement`,
        `Оптимизация`,
        `Валидный код`
      ],
      shortDescription: `сайт-портфолио.`,
      fullDescription: `В процессе разработки использовались подход "Progressive Enhancement" и "Mobile First", также использовалась БЭМ-методология. Сделана раскадровка и ретинизация изображений с целью ускорения загрузки страницы, чтобы качество изображений было одинакого высоким как на ретиновых, так и на обычных экранах. Произведена базовая сборка и оптимизация проекта с помощью Gulp (оптимизация графики, SVG-спрайты, сборка CSS из SASS, минификация JS и собранного CSS, автоприфексование свойств и группировка media-выражений). Проект разрабатывался с учетом неработоспособного JS.`
    },
    {
      title: `Keksobooking`,
      link: `https://kvezal.github.io/keksobooking/`,
      tasks: `documents/specification-keksobooking.md`,
      features: [
        `Fixed`,
        `SPA`,
        `ES5`,
        `Функциональный стиль`,
        `Модульность`,
        `AJAX`
      ],
      shortDescription: `сервис размещения объявлений о сдаче в аренду недвижимости в центре Токио.`,
      fullDescription: `Выполнена загрузка данных с сервера с последующим их отображением на карте в виде меток, при нажатии на которые осуществляется появление карточки для текущей метки. Так же реализовано перетаскивание метки с последующей синхронизацией ее с полем "Адрес" (так же можно задавать координаты внутри этого поля). Написана логика для интерактивной фильтрации полученных элементов по категориям: тип жилья, цена, количество комнат, количество гостей и особенности. Выполнена валидация и синхронизация полей ввода, добавлена возможность загрузки фотографий. При нажатии на кнопку "Опубликовать", данные проверяются на валидность и в случае успеха отправляются на сервер, при этом происходит сброс введенных данных. Обмен данными с сервером осуществляется посредством AJAX (получение и публикация данных). Код написан модульно, использован функциональный стиль. Произведена оптимизация логики исполнения кода.`
    },
    {
      title: `Kekstagram`,
      link: `https://kvezal.github.io/kekstagram/`,
      tasks: `documents/specification-kekstagram.md`,
      features: [
        `Fixed`,
        `SPA`,
        `ES5`,
        `Функциональный стиль`,
        `Модульность`,
        `AJAX`
      ],
      shortDescription: `сервис просмотра изображений.`,
      fullDescription: `Выполнена загрузка данных с сервера с последующим их отображением в галерее в виде фотографий загруженных пользователями, при нажатии на которые появляется модальное окно с исходным размером фотографии. Реализована загрузка фотографии при нажатии на иконку фотоаппарата с последующим наложением на загруженное фото одного из эффектов (хром, сепия, марвин, фобос или зной) и регулировка выбранного эффекта с помощью ползунка. Выполнена валидация полей ввода (хэш-теги, комментарии). При нажатии на кнопку публикации, данные отправляются на сервер, при этом окно с загруженной фотографией закрывается и происходит сброс введенных данных. Написана логика для интерактивной фильтрации полученных элементов по категориям: рекомендуемые, популярные, обсуждаемые и случайные. Обмен данными с сервером осуществляется посредством AJAX (получение и публикация данных). Код написан модульно, использован функциональный стиль. Произведена оптимизация логики исполнения кода.`
    },
    {
      title: `Pixel Hunter`,
      link: `https://kvezal.github.io/pixel-hunter/`,
      tasks: `documents/specification-pixel-hunter.md`,
      features: [
        `Fixed`,
        `SPA`,
        `Проектирование приложения`,
        `ES6+`,
        `Gulp`,
        `MVP`,
        `Модульность`,
        `Promise`
      ],
      shortDescription: `онлайн-игра в которой игроку предлагается отличать фотографии от фотореалистичных изображений.`,
      fullDescription: `Приложение спроектировано в соответствии с паттерном MVP, также произведено проектирование структуры данных, с последующей адаптацией приходящих с сервера данных, под ранее созданную структуру(ранее была неизвестна организация серверных данных, для чего и потребовалось их адаптировать под используемую в проекте структуру данных). Функционал проекта реализован в соответствии с техническим заданием. Весь код организован в соответствии с принципом dry. Осуществлена оптимизация кода.`
    }
  ],

  blog: [
    {
      title: `Название статьи 1`,
      link: `#`,
      description: `Описание 1`,
      date: new Date() - 1,
      article: `Текст статьи`,
      features: [
        `html`
      ]
    },
    {
      title: `Название статьи 2`,
      link: `#`,
      description: `Описание 2`,
      date: new Date() - 2,
      article: `Текст статьи`,
      features: [
        `css`
      ]
    },
    {
      title: `Название статьи 3`,
      link: `#`,
      description: `Описание 3`,
      date: new Date() - 3,
      article: `Текст статьи`,
      features: [
        `js`
      ]
    }
  ]
};
